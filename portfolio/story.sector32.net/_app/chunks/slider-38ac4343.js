class l{constructor(t,s,i,e,o=!1){this.thumb=t,this.isSvg=o,this.dispatchCallback=e,this.horizontal=i,this.slidespace=s,this.reset(),this.localTouchStart=this.touchStart.bind(this),this.localTouchMove=this.touchMove.bind(this),this.localTouchEnd=this.touchEnd.bind(this),this.thumb.addEventListener("touchstart",this.localTouchStart),window.addEventListener("touchmove",this.localTouchMove),window.addEventListener("touchend",this.localTouchEnd),this.localMouseDown=this.mouseDown.bind(this),this.localMouseMove=this.mouseMove.bind(this),this.localMouseUp=this.mouseUp.bind(this),this.thumb.addEventListener("mousedown",this.localMouseDown),window.addEventListener("mousemove",this.localMouseMove),window.addEventListener("mouseup",this.localMouseUp)}reset(){this.value=this.startValue=0,this.isSvg?this.thumb.style.transform="translateX(0px)":this.thumb.style.left="0px"}destroy(){this.thumb.removeEventListener("touchstart",this.localTouchStart),window.removeEventListener("touchmove",this.localTouchMove),window.removeEventListener("touchend",this.localTouchEnd),this.thumb.removeEventListener("mousedown",this.localMouseDown),window.removeEventListener("mousemove",this.localMouseMove),window.removeEventListener("mouseup",this.localMouseUp),this.localTouchStart=null,this.localTouchMove=null,this.localTouchEnd=null,this.localMouseDown=null,this.localMouseMove=null,this.localMouseUp=null}touchStart(t){this.isMovingTouch||(this.isMovingTouch=!0,this.startDrag(t.touches[0].clientX,t.touches[0].clientY))}touchMove(t){this.isMovingTouch&&this.doDrag(t.touches[0].clientX,t.touches[0].clientY)}touchEnd(t){this.isMovingTouch&&(this.isMovingTouch=!1)}mouseDown(t){this.isMovingClick||(this.isMovingClick=!0,this.startDrag(t.clientX,t.clientY))}mouseMove(t){this.isMovingClick&&this.doDrag(t.clientX,t.clientY)}mouseUp(t){this.isMovingClick&&(this.isMovingClick=!1)}startDrag(t,s){this.startValue=this.value,this.horizontal?this.startPosition=t:this.startPosition=s}doDrag(t,s){let i;this.horizontal?i=t:i=s;let e=i-this.startPosition;this.value=this.startValue+e/this.slidespace,this.value=Math.max(0,Math.min(1,this.value)),this.isSvg?this.thumb.style.transform="translateX("+this.slidespace*this.value+"px)":this.thumb.style.left=this.slidespace*this.value+"px",this.setElements(),this.dispatchCallback&&this.dispatchCallback(this.value)}end(){this.isMovingTouch=!1,this.isMovingClick=!1}setElements(){}}export{l as S};
